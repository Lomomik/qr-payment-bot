"""
–í–Ω–µ—à–Ω–∏–π –ø–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è Render –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞ –ª—é–±–æ–º –¥—Ä—É–≥–æ–º —Å–µ—Ä–≤–µ—Ä–µ (Oracle Cloud, –¥–æ–º–∞, VPS)
"""

import requests
import time
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# URL –≤–∞—à–µ–≥–æ Render –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
RENDER_APP_URL = "https://your-qr-bot.onrender.com"
PING_INTERVAL = 600  # 10 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

def ping_app():
    """–ü–∏–Ω–≥—É–µ—Ç Render –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    try:
        response = requests.get(f"{RENDER_APP_URL}/health", timeout=30)
        if response.status_code == 200:
            logger.info(f"‚úÖ Ping successful at {datetime.now()}")
            return True
        else:
            logger.warning(f"‚ö†Ô∏è Ping returned status {response.status_code}")
            return False
    except Exception as e:
        logger.error(f"‚ùå Ping failed: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–∞"""
    logger.info(f"üöÄ Starting ping service for {RENDER_APP_URL}")
    logger.info(f"‚è∞ Ping interval: {PING_INTERVAL // 60} minutes")
    
    while True:
        ping_app()
        time.sleep(PING_INTERVAL)

if __name__ == "__main__":
    main()
