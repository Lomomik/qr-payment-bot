#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è Oracle Cloud Always Free
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU, –ø–∞–º—è—Ç–∏, –¥–∏—Å–∫–∞ –∏ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
"""

import psutil
import subprocess
import json
from datetime import datetime

def get_system_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"""
    # CPU
    cpu_percent = psutil.cpu_percent(interval=1)
    cpu_count = psutil.cpu_count()
    
    # –ü–∞–º—è—Ç—å
    memory = psutil.virtual_memory()
    memory_total = memory.total / (1024**3)  # –í –ì–ë
    memory_used = memory.used / (1024**3)
    memory_percent = memory.percent
    
    # –î–∏—Å–∫
    disk = psutil.disk_usage('/')
    disk_total = disk.total / (1024**3)  # –í –ì–ë
    disk_used = disk.used / (1024**3)
    disk_percent = (disk.used / disk.total) * 100
    
    # –°–µ—Ç—å
    network = psutil.net_io_counters()
    
    return {
        'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        'cpu': {
            'percent': cpu_percent,
            'cores': cpu_count
        },
        'memory': {
            'total_gb': round(memory_total, 2),
            'used_gb': round(memory_used, 2),
            'percent': memory_percent
        },
        'disk': {
            'total_gb': round(disk_total, 2),
            'used_gb': round(disk_used, 2),
            'percent': round(disk_percent, 2)
        },
        'network': {
            'bytes_sent': network.bytes_sent,
            'bytes_recv': network.bytes_recv
        }
    }

def get_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', 'telegram-bot'],
            capture_output=True,
            text=True
        )
        is_active = result.stdout.strip() == 'active'
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
        result = subprocess.run(
            ['systemctl', 'show', 'telegram-bot', '--property=ActiveEnterTimestamp'],
            capture_output=True,
            text=True
        )
        start_time = result.stdout.strip().split('=')[1] if '=' in result.stdout else 'Unknown'
        
        return {
            'status': 'running' if is_active else 'stopped',
            'start_time': start_time
        }
    except Exception as e:
        return {
            'status': 'unknown',
            'error': str(e)
        }

def format_bytes(bytes_value):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç–æ–≤ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
    for unit in ['B', 'KB', 'MB', 'GB']:
        if bytes_value < 1024.0:
            return f"{bytes_value:.2f} {unit}"
        bytes_value /= 1024.0
    return f"{bytes_value:.2f} TB"

def print_status():
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –≤ –∫–æ–Ω—Å–æ–ª—å"""
    system_info = get_system_info()
    bot_status = get_bot_status()
    
    print("=" * 60)
    print(f"üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì ORACLE CLOUD –°–ï–†–í–ï–†–ê")
    print(f"üïê –í—Ä–µ–º—è: {system_info['timestamp']}")
    print("=" * 60)
    
    # –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    status_emoji = "üü¢" if bot_status['status'] == 'running' else "üî¥"
    print(f"ü§ñ Telegram –±–æ—Ç: {status_emoji} {bot_status['status'].upper()}")
    if 'start_time' in bot_status and bot_status['start_time'] != 'Unknown':
        print(f"‚è∞ –ó–∞–ø—É—â–µ–Ω: {bot_status['start_time']}")
    print()
    
    # –†–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã
    print("üíª –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –†–ï–°–£–†–°–û–í:")
    print(f"üî• CPU: {system_info['cpu']['percent']:.1f}% ({system_info['cpu']['cores']} cores)")
    
    memory_bar = "‚ñà" * int(system_info['memory']['percent'] / 5) + "‚ñë" * (20 - int(system_info['memory']['percent'] / 5))
    print(f"üß† RAM: {system_info['memory']['percent']:.1f}% [{memory_bar}]")
    print(f"     {system_info['memory']['used_gb']:.2f} GB / {system_info['memory']['total_gb']:.2f} GB")
    
    disk_bar = "‚ñà" * int(system_info['disk']['percent'] / 5) + "‚ñë" * (20 - int(system_info['disk']['percent'] / 5))
    print(f"üíæ –î–∏—Å–∫: {system_info['disk']['percent']:.1f}% [{disk_bar}]")
    print(f"      {system_info['disk']['used_gb']:.2f} GB / {system_info['disk']['total_gb']:.2f} GB")
    
    print(f"üåê –°–µ—Ç—å: ‚Üë{format_bytes(system_info['network']['bytes_sent'])} ‚Üì{format_bytes(system_info['network']['bytes_recv'])}")
    print()
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    warnings = []
    if system_info['memory']['percent'] > 80:
        warnings.append("‚ö†Ô∏è  –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏!")
    if system_info['disk']['percent'] > 90:
        warnings.append("‚ö†Ô∏è  –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ!")
    if bot_status['status'] != 'running':
        warnings.append("üö® Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω!")
    
    if warnings:
        print("üö® –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"   {warning}")
        print()
    
    # Oracle Cloud Always Free –ª–∏–º–∏—Ç—ã
    print("üìè ORACLE CLOUD ALWAYS FREE –õ–ò–ú–ò–¢–´:")
    print(f"   RAM: {system_info['memory']['total_gb']:.1f} GB –∏–∑ 1.0 GB (–ª–∏–º–∏—Ç)")
    print(f"   CPU: 1/8 OCPU (Always Free)")
    print(f"   –î–∏—Å–∫: {system_info['disk']['total_gb']:.1f} GB –∏–∑ 200 GB (–ª–∏–º–∏—Ç)")
    print("=" * 60)

if __name__ == "__main__":
    print_status()
