#!/usr/bin/env python3
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –±–æ—Ç–∞
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏
"""

from database import db
from datetime import datetime, timedelta
from typing import List, Dict


def format_daily_report() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç"""
    daily_stats = db.get_daily_stats(7)
    
    if not daily_stats:
        return "üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π"
    
    report = "üìä **–î–ù–ï–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê (7 –¥–Ω–µ–π)**\n\n"
    
    for day in daily_stats:
        date = day['date']
        transactions = day['transactions']
        total = day['total_amount']
        avg = total / transactions if transactions > 0 else 0
        
        report += f"üìÖ {date}\n"
        report += f"  üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {transactions}\n"
        report += f"  üíµ –°—É–º–º–∞: {total:,.0f} CZK\n"
        report += f"  üìä –°—Ä–µ–¥–Ω—è—è: {avg:.0f} CZK\n\n"
    
    return report


def format_services_report() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –ø–æ —É—Å–ª—É–≥–∞–º"""
    services = db.get_popular_services(10)
    
    if not services:
        return "üìã –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —É—Å–ª—É–≥–∞–º"
    
    report = "üõçÔ∏è **–ü–û–ü–£–õ–Ø–†–ù–´–ï –£–°–õ–£–ì–ò**\n\n"
    
    total_count = sum(count for _, count in services)
    
    for i, (service, count) in enumerate(services, 1):
        percentage = (count / total_count * 100) if total_count > 0 else 0
        bar = "‚ñà" * int(percentage / 5)  # –ü—Ä–æ—Å—Ç–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
        report += f"{i}. {service}\n"
        report += f"   {bar} {count}x ({percentage:.1f}%)\n\n"
    
    return report


def format_users_report() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    users = db.get_all_users_stats()
    
    if not users:
        return "üë• –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"
    
    report = "üë• **–ê–ö–¢–ò–í–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò**\n\n"
    
    for i, user in enumerate(users[:10], 1):
        username = user['username'] or f"User{user['user_id']}"
        name = user['first_name'] or ""
        
        report += f"{i}. @{username}"
        if name:
            report += f" ({name})"
        report += "\n"
        report += f"   üí∞ {user['transactions_count']} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n"
        report += f"   üíµ {user['total_amount']:.0f} CZK\n"
        report += f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π: {user['last_seen'][:10]}\n\n"
    
    return report


def format_summary_report() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–±—â–∏–π –æ—Ç—á–µ—Ç"""
    stats = db.get_total_stats()
    recent = db.get_recent_transactions(5)
    
    report = "üìä **–û–ë–©–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê**\n\n"
    report += f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
    report += f"üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {stats['total_transactions']}\n"
    report += f"üíµ –û–±—â–∞—è —Å—É–º–º–∞: {stats['total_amount']:,.0f} CZK\n"
    report += f"üìä –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {stats['avg_amount']:.0f} CZK\n"
    report += f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö (24—á): {stats['active_24h']}\n\n"
    
    if recent:
        report += "üïí **–ü–û–°–õ–ï–î–ù–ò–ï –¢–†–ê–ù–ó–ê–ö–¶–ò–ò:**\n\n"
        for t in recent:
            username = t['username'] or f"ID{t['user_id']}"
            service = t['service'] or "–ë–µ–∑ —É—Å–ª—É–≥–∏"
            timestamp = t['timestamp'][:16].replace('T', ' ')
            report += f"‚Ä¢ {timestamp} - @{username}\n"
            report += f"  {t['amount']:.0f} CZK - {service}\n\n"
    
    return report


if __name__ == '__main__':
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("=" * 50)
    print(format_summary_report())
    print("=" * 50)
    print(format_daily_report())
    print("=" * 50)
    print(format_services_report())
    print("=" * 50)
    print(format_users_report())
